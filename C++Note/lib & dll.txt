在程式開發中，lib 和 dll 都是用來存放程式庫（Library）的文件，但它們的用途和運作方式有所不同。以下是它們的主要區別：
1. 靜態 vs. 動態
- LIB（Library，靜態庫）
- 在 編譯 時被整合進可執行檔案（EXE 或 DLL）。
- 使用 LIB 會使編譯出的程式體積變大，因為程式碼會被直接嵌入。
- 當程式運行時，LIB 的內容已經內嵌，不需要額外載入。
- DLL（Dynamic Link Library，動態連結庫）
- 在 執行 時才載入，程式不會直接把 DLL 的內容嵌入 EXE。
- 使用 DLL 可以讓程式變小，因為只需在執行時載入需要的函式。
- 多個應用程式可以共用相同的 DLL，節省記憶體與磁碟空間。
2. 編譯 & 連結
- LIB 需要在 編譯時 連結，這代表在生成 EXE 檔案時，LIB 的內容會被加入程式。
- DLL 則是在 執行時 連結，程式會在需要時載入 DLL，而不是在編譯時直接嵌入。
3. 版本管理
- 使用 DLL 更容易進行 版本更新，因為只需替換 DLL 檔案即可，而不需要重新編譯程式。
- 如果使用 LIB，則需要重新編譯整個程式才能使用更新後的程式庫。
4. 共享性
- LIB 是獨立的，每個程式需要自己的複本，不容易共享。
- DLL 可以由 多個應用程式共用，減少重複的程式碼，提升系統效能。
應用場景
- LIB 適合小型應用或對效能要求高的應用（減少執行時載入開銷）。
- DLL 適合大型應用程式，方便版本更新和功能擴充。

