在C++中，lambda表達式是匿名函數的一種形式，它可以捕捉周圍作用域中的變量。[]和[&]的區別主要與變量捕捉的方式有關：
- []（空捕捉列表）：
表示lambda不捕捉任何外部作用域中的變量。如果你嘗試在lambda中使用外部變量，將導致編譯錯誤。例如：int x = 10;
auto lambda = []() {
    // x 無法在此處被訪問，因為沒有捕捉它
};

- [&]（按引用捕捉）：
表示lambda將捕捉外部作用域中的所有變量，並按引用傳遞。這意味著lambda內部對變量的更改會影響到外部變量。例如：int x = 10;
auto lambda = [&]() {
    x += 5; // 將修改外部的 x
};
lambda();
std::cout << x; // 輸出 15


如果你希望特定的變量按值捕捉或者按引用捕捉，也可以指定。例如：
int x = 10;
int y = 20;
auto lambda = [x, &y]() {
    // x 是按值捕捉，y 是按引用捕捉
    std::cout << x << " " << y;
};


簡而言之：
- []：不捕捉外部變量。
- [&]：按引用捕捉所有外部變量。


