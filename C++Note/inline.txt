內聯（inline）函數在程式設計中是一種編譯器優化技術，它的主要特色是將函數的程式碼直接插入到調用它的地方，而不是通過傳統的函數調用機制。這樣做有其優勢和劣勢：
特色與優勢
- 減少函數調用開銷：內聯函數避免了傳統函數調用時的壓棧和彈棧操作，提高執行效率。
- 提升指令快取命中率：由於函數的程式碼直接展開，可能提高程式的局部性，使指令快取更有效。
- 允許編譯器進一步優化：編譯器可以對內聯函數進行更多的優化，例如消除死碼、加強分支預測等。

缺點
- 可能導致程式碼膨脹：如果內聯函數過於龐大，展開後的程式碼可能會佔用更多的記憶體，影響快取效能。
- 增加編譯時間：每次修改內聯函數時，所有使用該函數的地方都需要重新編譯，可能影響開發效率。
- 不適用於嵌入式系統：在記憶體受限的環境中，如嵌入式系統，內聯函數可能導致二進制檔案過大，不利於系統運行。
